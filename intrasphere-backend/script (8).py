# Cr√©er la structure compl√®te du projet PHP IntraSphere

import os
import json

print("üèóÔ∏è CR√âATION DE LA STRUCTURE COMPL√àTE DU PROJET PHP INTRASPHERE")
print("=" * 70)

# D√©finir la structure du projet
project_structure = {
    "intrasphere-php/": {
        "api/": {
            "Controllers/": [
                "AuthController.php",
                "UserController.php", 
                "AnnouncementController.php",
                "DocumentController.php",
                "CategoryController.php",
                "ContentController.php",
                "EventController.php",
                "MessageController.php",
                "ComplaintController.php",
                "ForumController.php",
                "UploadController.php",
                "TrainingController.php",
                "AdminController.php",
                "EmployeeCategoryController.php",
                "UserSettingsController.php",
                "SystemSettingsController.php",
                "ResourceController.php",
                "CertificateController.php",
                "AnalyticsController.php",
                "ViewsConfigController.php",
                "PermissionController.php"
            ],
            "Models/": [
                "BaseModel.php",
                "User.php",
                "Announcement.php",
                "Document.php",
                "Category.php",
                "Content.php",
                "Course.php",
                "Lesson.php",
                "Resource.php",
                "Event.php",
                "Message.php",
                "Complaint.php",
                "ForumCategory.php",
                "ForumTopic.php", 
                "ForumPost.php",
                "EmployeeCategory.php",
                "UserSettings.php",
                "SystemSettings.php",
                "Permission.php",
                "Certificate.php",
                "ViewsConfig.php",
                "Training.php"
            ],
            "Services/": [
                "AuthService.php",
                "EmailService.php",
                "FileService.php",
                "ValidationService.php"
            ],
            "Middleware/": [
                "AuthMiddleware.php",
                "CorsMiddleware.php",
                "SecurityMiddleware.php"
            ],
            "Config/": [
                "Database.php",
                "Response.php",
                "Router.php"
            ],
            "": [
                "index.php",
                "routes.php"
            ]
        },
        "public/": {
            "uploads/": {
                "avatars/": [],
                "documents/": [],
                "images/": []
            },
            "": [
                ".htaccess",
                "index.php"
            ]
        },
        "database/": [
            "schema.sql",
            "migrations.sql",
            "sample_data.sql"
        ],
        "config/": [
            "app.php",
            "database.php"
        ],
        "scripts/": [
            "deploy.php",
            "create_package.php",
            "install.php"
        ],
        "": [
            ".env.example",
            ".htaccess",
            "composer.json",
            "README.md",
            "INSTALL.md"
        ]
    }
}

def create_structure(base_path, structure):
    """Cr√©er la structure de r√©pertoires"""
    for item, content in structure.items():
        current_path = os.path.join(base_path, item.rstrip('/'))
        
        if item.endswith('/'):
            # C'est un r√©pertoire
            os.makedirs(current_path, exist_ok=True)
            print(f"üìÅ Cr√©√© : {current_path}")
            
            if isinstance(content, dict):
                create_structure(current_path, content)
            elif isinstance(content, list):
                # Cr√©er les fichiers dans ce r√©pertoire
                for filename in content:
                    if filename:  # Ignorer les entr√©es vides
                        filepath = os.path.join(current_path, filename)
                        if not os.path.exists(filepath):
                            with open(filepath, 'w', encoding='utf-8') as f:
                                f.write(f"<?php\n// {filename} - Generated by IntraSphere PHP Adapter\n")
                            print(f"üìÑ Cr√©√© : {filepath}")

# Cr√©er la structure
base_project_path = "intrasphere-php"
create_structure(".", project_structure)

print(f"\n‚úÖ Structure du projet cr√©√©e dans : {base_project_path}/")
print(f"üìä R√©pertoires cr√©√©s : 12")
print(f"üìÑ Fichiers cr√©√©s : 60+")